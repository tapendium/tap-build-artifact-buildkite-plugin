#!/bin/bash

set -eo pipefail

CWD="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PREFIX="BUILDKITE_PLUGIN_TAP_BUILD_ARTIFACT_"
DEBUG_FLAG="${PREFIX}DEBUG"

# shellcheck source=lib/shared.sh
. "$CWD/../lib/shared.sh"

if [[ "${!DEBUG_FLAG:-false}" =~ (true|on|1) ]] ; then
  echo "~~~ :hammer: Enabling debug mode"
  set -x
fi

RUN_TYPE=download
REPO_GIT=${BUILDKITE_REPO#git@github.com:"$BUILDKITE_ORGANIZATION_SLUG"/*}
REPO_NAME=${REPO_GIT%*.git}
REPO=${REPO_NAME:-$(plugin_read_config REPO)} 
TYPE=$(plugin_read_config TYPE)
ARTIFACTS_PATH_ENV=$(plugin_read_config ARTIFACTS_PATH_ENV)

if [ "$TYPE" != "$RUN_TYPE" ]
then
  echo "[INFO] type not equal $RUN_TYPE"
  exit 0
fi

IS_VALID=true

if [ -z "$REPO" ]
then
  echo "[ERROR] repo not defined"
  IS_VALID=false
fi

if [ -z "$ARTIFACTS_PATH_ENV" ]
then
  echo "[ERROR] artifacts-path-env not defined"
  IS_VALID=false
fi

if [[ ${IS_VALID:-true} =~ (false) ]]; then
  exit 1
fi

HEAD_COMMIT=$(curl \
  -H "Authorization: Bearer ${GITHUB_TOKEN}" \
  https://api.github.com/repos/"${BUILDKITE_ORGANIZATION_SLUG}"/"${REPO}"/commits/"${BUILDKITE_COMMIT}"/pulls |
  jq -r '.[0].head.sha')
PIPELINE_DETAIL=$(curl \
  -H "Authorization: Bearer ${BUILDKITE_TOKEN}" \
  https://api.buildkite.com/v2/organizations/"${BUILDKITE_ORGANIZATION_SLUG}"/builds?commit="${HEAD_COMMIT}" |
  jq -r '.[0] | {id, pipeline}')

HEAD_COMMIT_BUILD_ID=$(echo "$PIPELINE_DETAIL" | jq -r '.id')
PIPELINE_SLUG=$(echo "$PIPELINE_DETAIL" | jq -r '.pipeline.slug')

echo "$PIPELINE_SLUG"
echo "$HEAD_COMMIT"
echo "$HEAD_COMMIT_BUILD_ID"

buildkite_artifact_download "${!ARTIFACTS_PATH_ENV}" '.' --build "$HEAD_COMMIT_BUILD_ID"
